import telebot
import google.generativeai as genai
import os

# --- –ó–ê–ì–†–£–ó–ö–ê –ö–õ–Æ–ß–ï–ô ---
# –ë–µ–∑–æ–ø–∞—Å–Ω–æ –ø–æ–ª—É—á–∞–µ–º –∫–ª—é—á–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
# –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ –º–æ–∂–Ω–æ –≤—Ä–µ–º–µ–Ω–Ω–æ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ –≤—Å—Ç–∞–≤–∏—Ç—å –∫–ª—é—á–∏ —Å—é–¥–∞:
# TELEGRAM_BOT_TOKEN = '8343640201:AAHHnOj4eJr5kkCyawmBhpN9l4cQ6Y_NYBs'
# GEMINI_API_KEY = 'AIzaSyAH2g3J-R8QVF7Z0cT4ENS15nUhSpUJ2IY'

TELEGRAM_BOT_TOKEN = os.environ.get('TELEGRAM_BOT_TOKEN')
GEMINI_API_KEY = os.environ.get('GEMINI_API_KEY')


# --- –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ---
# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª—é—á–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
if not TELEGRAM_BOT_TOKEN or not GEMINI_API_KEY:
    raise ValueError("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_BOT_TOKEN –∏ GEMINI_API_KEY")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –º–æ–¥–µ–ª–∏ Gemini
bot = telebot.TeleBot(TELEGRAM_BOT_TOKEN)
genai.configure(api_key=GEMINI_API_KEY)
model = genai.GenerativeModel('gemini-1.5-flash')


# --- –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò ---
@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –Ω–∞ –±–∞–∑–µ Google Gemini. –ó–∞–¥–∞–π –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å.")

@bot.message_handler(func=lambda message: True)
def get_gemini_response(message):
    thinking_message = bot.reply_to(message, "üß† –î—É–º–∞—é...")
    try:
        response = model.generate_content(message.text)
        bot.edit_message_text(chat_id=message.chat.id, message_id=thinking_message.message_id, text=response.text)
    except Exception as e:
        bot.edit_message_text(chat_id=message.chat.id, message_id=thinking_message.message_id, text=f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")


# --- –ó–ê–ü–£–°–ö ---
print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
bot.polling(none_stop=True)